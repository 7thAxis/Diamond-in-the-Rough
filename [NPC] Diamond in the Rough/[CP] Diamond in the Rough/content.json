{
    "Format": "2.0.0",
    //Config
    
    "ConfigSchema": {
        "Shadow Stat Changes": {
            "AllowValues": "true, false",
            "Default": true,
            "AllowBlank": false,
            "Description": "Allows for the changing of Shadow stats to no longer harm the player after completing Sen's storyline.",
            "Section": "Gameplay"
        },
        "Pacifist Mode": {
            "AllowValues": "true, false",
            "Default": false,
            "AllowBlank": false,
            "Description": "Shadows will be invincible to player attacks. (Shadow Stat Changes must be set to true for this to take effect.)",
            "Section": "Gameplay"
        },
        "Golem Eradication Substitute": {
            "AllowValues": "true, false",
            "Default": false,
            "AllowBlank": false,
            "Description": "Changes the Void Spirit eradication goal in the Adventurer's Guild to golems. The player does not have to fight Shadowfolk to reach perfection when enabled.",
            "Section": "Gameplay"
        },
        "Have Shadow Kids": {
            "AllowValues": "true, false",
            "Default": true,
            "AllowBlank": false,
            "Description": "Determines if you have Shadow children when you are married to Sen and changes dialogue accordingly. (Sen must be set as the primary spouse if Free Love is installed for this to take effect.)",
            "Section": "Graphics"
        },
        "Reshade Existing Shadows": {
            "AllowValues": "true, false",
            "Default": false,
            "AllowBlank": false,
            "Description": "Recolors existing Shadowfolk overworld sprites to match DitR's style.",
            "Section": "Graphics"
        }
    },
    //DTs
    "DynamicTokens": [

        //CALCULATIONS
        {
            "Name": "IsOddYear",
            "Value": "{{Query: {{Year}} % 2 = 1}}"
        },
        {
            "Name": "BasicRandomizer",
            "Value": "{{Random:{{Range: 1, 2}}}}"
        },

        //DIALOGUE SWITCHERS
        {
            "Name": "SenPartnershipType",
            "Value": "Romantic",
            "When": {
                "HasFlag: |contains=DitR_M_SenS_Romantic": true,
                "Relationship:SenS": "Married, Dating, Engaged"
            }
        },
        {
            "Name": "SenPartnershipType",
            "Value": "Platonic",
            "When": {
                "HasFlag: |contains=DitR_M_SenS_Romantic": false,
                "Relationship:SenS": "Unmet, Friendly, Divorced"
            }
        },
        {
            "Name": "TracePartnershipType",
            "Value": "Romantic",
            "When": {
                "HasFlag: |contains=DitR_M_TraceV_Romantic": true,
                "Relationship:TraceV": "Married, Dating, Engaged"
            }
        },
        {
            "Name": "TracePartnershipType",
            "Value": "Platonic",
            "When": {
                "HasFlag: |contains=DitR_M_TraceV_Romantic": false,
                "Relationship:TraceV": "Unmet, Friendly, Divorced"
            }
        },
        {
            "Name": "SenKrobusReference",
            "Value": "{{i18n:Core.SenS.KrobusUnknown}}",
            "When": {
                "Relationship:Krobus": "Unmet"
            }
        },
        {
            "Name": "SenKrobusReference",
            "Value": "{{i18n:Core.SenS.KrobusKnown}}",
            "When": {
                "Relationship:Krobus": "Married, Dating, Engaged, Friendly, Divorced"
            }
        },
        {
            "Name": "DwarfSpeech",
            "Value": "Dwarvish",
            "When": {
                "HasWalletItem |contains=DwarvishTranslationGuide": false
            }
        },
        {
            "Name": "DwarfSpeech",
            "Value": "Translated",
            "When": {
                "HasWalletItem |contains=DwarvishTranslationGuide": true
            }
        },
        {
            "Name": "AnimalBehavior",
            "Value": "Sound",
            "When": {
                "BasicRandomizer": "1"
            }
        },
        {
            "Name": "AnimalBehavior",
            "Value": "Action",
            "When": {
                "BasicRandomizer": "2"
            }
        },

        //ABBREVIATED DAY OF WEEK CHECK 
            //(Surely there's a cleaner way to do this...?)
            //Remember not to delete Monday! (...again.)
        {
            "Name": "WeekDay",
            "Value": "Mon",
            "When": {
                "DayOfWeek |contains=Monday": true
            }
        },
        {
            "Name": "WeekDay",
            "Value": "Tue",
            "When": {
                "DayOfWeek |contains=Tuesday": true
            }
        },
        {
            "Name": "WeekDay",
            "Value": "Wed",
            "When": {
                "DayOfWeek |contains=Wednesday": true
            }
        },
        {
            "Name": "WeekDay",
            "Value": "Thu",
            "When": {
                "DayOfWeek |contains=Thursday": true
            }
        },
        {
            "Name": "WeekDay",
            "Value": "Fri",
            "When": {
                "DayOfWeek |contains=Friday": true
            }
        },
        {
            "Name": "WeekDay",
            "Value": "Sat",
            "When": {
                "DayOfWeek |contains=Saturday": true
            }
        },
        {
            "Name": "WeekDay",
            "Value": "Sun",
            "When": {
                "DayOfWeek |contains=Sunday": true
            }
        },
        //PASS-IN TOKENS
            //GOD AXELL WHY, GOD WHY GOD WHY WHHHHYYYY
        {
            "Name": "SenRandTokens",
            "Value": "|AP={{i18n:Core.SenS.Book.AP.{{Random:{{Range: 1, 7}}|key=SenSR1}}}} |BookType={{i18n:Core.SenS.Book.Type.{{Random:{{Range: 1, 3}}|key=SenSR2}}}} |Subject={{i18n:Core.SenS.Book.Subj.{{Random:{{Range: 1, 14}}|key=SenSR3}}}} |Subject2={{i18n:Core.SenS.Book.Subj2.{{Random:{{Range: 1, 7}}|key=SenSR}}}} |Descriptor={{i18n:Core.SenS.Book.Obj.{{Random:{{Range: 1, 6}}|key=SenSR5}}}} |Descriptor2={{i18n:Core.SenS.Book.Obj2.{{Random:{{Range: 1, 6}}|key=SenSR6}}}} |Descriptor3={{i18n:Core.SenS.Book.Obj3.{{Random:{{Range: 1, 6}}|key=SenSR7}}}} |Descriptor4={{i18n:Core.SenS.Book.Obj4.{{Random:{{Range: 1, 6}}|key=SenSR8}}}} |Descriptor5={{i18n:Core.SenS.Book.Obj5.{{Random:{{Range: 1, 5}}|key=SenSR9}}}} |BookPeople={{i18n:Core.SenS.Book.People.{{Random:{{Range: 1, 9}}|key=SenSR10}}}} |Author={{i18n:Core.SenS.Book.Author.{{Random:{{Range: 1, 8}}|key=SenSR11}}}} |Author2={{i18n:Core.SenS.Book.Author2.{{Random:{{Range: 1, 5}}|key=SenSR12}}}} |CrocItem={{i18n:Core.SenS.CrocItem.{{Random:{{Range: 1, 7}}|key=SenSR13}}}} |CrocColor={{i18n:Core.SenS.CrocColor.{{Random:{{Range: 1, 5}}|key=SenSR14}}}} |Image={{i18n:Core.SenS.Image.{{Random:{{Range: 1, 9}}|key=SenSR15}}}} |Animal={{i18n:Core.SenS.Animal.{{Random:{{Range: 1, 5}}|key=SenSR16}}}} |Flavor={{i18n:Core.SenS.Flavor.{{Random:{{Range: 1, 5}}|key=SenSR17}}}} |FoodStyle={{i18n:Core.SenS.FoodStyle.{{Random:{{Range: 1, 4}}|key=SenSR18}}}} |Food={{i18n:Core.SenS.Food.{{Random:{{Range: 1, 7}}|key=SenSR19}}}} |Spikes={{i18n:Core.SenS.Spikes.{{Random:{{Range: 1, 4}}|key=SenSR20}}}} |Symbolism={{i18n:Core.SenS.CrocusSymbolism.{{Random:{{Range: 1, 4}}|key=SenSR21}}}} |Object={{i18n:Core.SenS.FoundObjects.{{Random:{{Range: 1, 7}}|key=SenSR22}}}} |Object2={{i18n:Core.SenS.FoundObjects2.{{Random:{{Range: 1, 4}}|key=SenSR23}}}} |People={{i18n:Core.SenS.People.{{Random:{{Range: 1, 12}}|key=SenSR24}}}} |SpringCrop={{i18n:Core.SenS.SpringCrop.{{Random:{{Range: 1, 5}}|key=SenSR25}}}} |Expression={{i18n:Core.SenS.Expression.{{Random:{{Range: 1, 5}}|key=SenSR26}}}} |ClosingEH44={{i18n:Core.SenS.EH.44.{{Random:{{Range: 1, 3}}|key=SenSR27}}}} |ClosingEH46={{i18n:Core.SenS.EH.46.{{Random:{{Range: 1, 3}}|key=SenSR28}}}} |ClosingEH48={{i18n:Core.SenS.EH.48.{{Random:{{Range: 1, 3}}|key=SenSR29}}}} |ClosingEH52={{i18n:Core.SenS.EH.52.{{Random:{{Range: 1, 3}}|key=SenSR30}}}} |ClosingEH53={{i18n:Core.SenS.EH.53.{{Random:{{Range: 1, 4}}|key=SenSR31}}}} |GameResult1={{i18n:Core.SenS.EH.54.1.{{Random:{{Range: 1, 2}}|key=SenSR32}}}} |GameResult2={{i18n:Core.SenS.EH.54.2.{{Random:{{Range: 1, 2}}|key=SenSR33}}}} |QuirkyAction={{i18n:Core.SenS.EH.56.{{Random:{{Range: 1, 4}}|key=SenSR34}}}} |ClosingLH52={{i18n:Core.SenS.LH.52.{{Random:{{Range: 1, 3}}|key=SenSR35}}}}"
        },
        {
            "Name": "RelationshipTokens",
            "Value": "|SenRelationshipTerm={{i18n:Core.SenS.RelationshipTerm.{{SenPartnershipType}}}} |SenKrobusReference={{SenKrobusReference}}"
        }
    ],
    //Files
    "Changes": [
        {
            "Action": "Load",
            "Target": "Characters/Dialogue/EveT, Characters/schedules/EveT, Characters/Dialogue/TraceV, Characters/schedules/TraceV, Characters/Dialogue/WaffleW, Characters/schedules/WaffleW, Characters/Dialogue/PipoP, Characters/schedules/PipoP, Characters/Dialogue/SenS, Characters/schedules/SenS, Characters/Dialogue/MarriageDialogueSenS, Characters/Dialogue/MarriageDialogueSenSRoommate",
            "FromFile": "data/blank.json"
        },
        //All
        {
            "Action": "Include",
            "FromFile": "data/Core/SpriteData.json, data/Core/NPCData.json, data/Core/MapData.json, data/Core/MusicData.json, data/Core/ItemData.json, data/Core/QuestData.json, data/Festivals/FestivalDialogue.json, data/Core/MonsterData.json, data/Core/ForageData.json, data/Dialogue/TownieDialogue.json"
        },
        //Eve
        {
            "Action": "Include",
            "FromFile": "data/Dialogue/EveDialogue.json, data/Schedules/EveSchedule.json, data/Festivals/EveFestivalLocations.json, data/Movies/EveMovieData.json, data/Events/Eve/Event0.json, data/Events/Eve/Event2.json"
        },
        //Trace
        {
            "Action": "Include",
            "FromFile": "data/Dialogue/TraceDialogue.json, data/Schedules/TraceSchedule.json"
        },
        //Sen
		{
			"Action": "Include",
			"FromFile": "data/Dialogue/SenDialogue.json, data/Dialogue/SenDialogue_Partner.json, data/Schedules/SenSchedule.json, data/Festivals/SenFestivalLocations.json, data/Movies/SenMovieData.json,data/Events/Sen/Event0.json, data/Events/Sen/Event2.json,data/Events/Sen/Event4.json, data/Events/Sen/Event6.json,data/Events/Sen/Event8.json, data/Events/Sen/Event10.json, data/Events/Sen/Event14.json, data/Events/Sen/ReactToDeath.json"
		},
        {
			"Action": "Include",
			"FromFile": "data/Schedules/SenSchedule.json",
            "When":{ "HasSeenEvent: |contains={{ModID}}.Events.SenS.0h": true }
		},
        //Waffle
        {
            "Action": "Include",
            "FromFile": "data/Dialogue/WaffleDialogue.json, data/Schedules/WaffleSchedule.json, data/Festivals/WaffleFestivalLocations.json, data/Movies/WaffleMovieData.json"
        },
        //Pipo
        {
            "Action": "Include",
            "FromFile": "data/Dialogue/PipoDialogue.json, data/Schedules/PipoSchedule.json, data/Festivals/PipoFestivalLocations.json, data/Movies/PipoMovieData.json"
        },
        //loads based on mod compat
        {
            "Action": "EditData",
            "Target": "Mods/Bouhm.NPCMapLocations/NPCs",
            "Entries": {
                "WaffleW": {
                    "MarkerCropOffset": 15
                },
                "PipoP": {
                    "MarkerCropOffset": 15
                },
                "EveT": {
                    "MarkerCropOffset": 4
                },
                "TraceV": {
                    "MarkerCropOffset": 4
                },
                "SenS": { 
                    "MarkerCropOffset": 5 
                },
                "When": {
                    "HasMod: |contains=Bouhm.NPCMapLocations": true
                }
            }
        }
    ]
}
/*
Welcome to the Content.json of Diamond in the Rough! Here you'll find the technical set-up stuff for my mod. 
If you have any questions about how somethings works, feel free to reach out!

CREDITS
    FellowClown - Created Eve's house and both Jeremy's portraits and overworld sprites. Also an amazing friend!
    Chirps/Batty - Beta read and edited my dialogue! Always goofy and fun to hang out with.
    Pooh - Advanced code help. I've learned so so so so much from her!!
    LemurKat - For being an amazing modmom and giving my babies a home!
    KittyCatCasey - For adding amazing features to SpaceCore that let me do fancy things!
    TheFrenchDodo - For the rendition of Barbie Girl for Trace. I promise I'll use this.
    Concerned Ape - For creating SDV and giving me a creative outlet!
    Zane Little - Eve's theme from FMA. (https://freemusicarchive.org/music/zane-little/a-bag-of-chips/the-world-is-ours/)

    Also a special thanks to all my friends offering feedback and creative support:
        DestyNova, Tenebrous Nova, Mad Dog, Bagi
        Tiara, JayJayDubs, DecidedlyHuman, Hecate 

    Love you all.<3
*/
{
    "Format": "2.0.0",

    //Config    
    "ConfigSchema": {
        "Shadow Stat Changes": {
            "AllowValues": "true, false",
            "Default": true,
            "AllowBlank": false,
            "Description": "Allows for the changing of Shadow stats to no longer harm the player after completing Sen's storyline.",
            "Section": "Gameplay"
        },
        "Pacifist Mode": {
            "AllowValues": "true, false",
            "Default": false,
            "AllowBlank": false,
            "Description": "Shadows will be invincible to player attacks. (Shadow Stat Changes must be set to true for this to take effect.)",
            "Section": "Gameplay"
        },
        "Golem Eradication Substitute": {
            "AllowValues": "true, false",
            "Default": false,
            "AllowBlank": false,
            "Description": "Changes the Void Spirit eradication goal in the Adventurer's Guild to golems. The player does not have to fight Shadowfolk to reach perfection when enabled.",
            "Section": "Gameplay"
        },
        "Have Shadow Kids": {
            "AllowValues": "true, false",
            "Default": true,
            "AllowBlank": false,
            "Description": "Determines if you have Shadow children when you are married to Sen and changes dialogue accordingly. (Sen must be set as the primary spouse if Free Love is installed for this to take effect.)",
            "Section": "Graphics"
        },
        "Reshade Existing Shadows": {
            "AllowValues": "true, false",
            "Default": false,
            "AllowBlank": false,
            "Description": "Recolors existing Shadowfolk overworld sprites to match DitR's style.",
            "Section": "Graphics"
        },
        "Alpha Pipo Portrait": {
            "AllowValues": "true, false",
            "Default": false,
            "AllowBlank": false,
            "Description": "Uses Pipo's original alpha portrait art. For those that want more derp.",
            "Section": "Graphics"
        },
        "Player Pronouns 1": {
            "Default": "They",
            "AllowBlank": false,
            "Description": "Sets the player's desired pronouns. You can enter multiple sets for randomized selection each day separated by ','. (Example: They, She)",
            "Section": "Pronouns"
        }, 
        "Player Pronouns 2": {
            "Default": "Them",
            "AllowBlank": false,
            "Description": "Sets the player's desired pronouns. You can enter multiple sets for randomized selection each day separated by ','. (Example: Them, Her)",
            "Section": "Pronouns"
        },
        "Player Pronouns 3": {
            "Default": "Theirs",
            "AllowBlank": false,
            "Description": "Sets the player's desired pronouns. You can enter multiple sets for randomized selection each day separated by ','. (Example: Theirs, Hers)",
            "Section": "Pronouns"
        },
        "Player Pronouns 4": {
            "Default": "Themself",
            "AllowBlank": false,
            "Description": "Sets the player's desired pronouns. You can enter multiple sets for randomized selection each day separated by ','. (Example: Themself, Herself)",
            "Section": "Pronouns"
        },
        "Player Pronoun Identifier": {
            "Default": "are",
            "AllowBlank": false,
            "Description": "Would usually be \"is\" or \"are\", depending on context. (She IS so cool! VS. They ARE so cool!) You can enter multiple sets for randomized selection each day separated by ','. (Example: are, is)",
            "Section": "Pronouns"
        }             
    },
    //DTs
    "DynamicTokens": [    
        //WORLD STATE
            /* IsOddYear - Checks if the year is odd for SVE Spirits Eve festival placement.
               IsTodayRainy - Checks if it is storming or raining on the current day.
               WeekDay - Checks the current abbreviated week day from WeekDayList contents.
               BasicRandomizer - Basic 50/50 chance used for randomizing various things in the mod.*/
        {
            "Name": "IsOddYear",
            "Value": "{{Query: {{Year}} % 2 = 1}}"
        },
        {
            "Name": "IsTodayRainy",
            "Value": "RainyDay",
            "When": { "Weather": "Rain, Storm" }
        },
        {
            "Name": "WeekDayList",
            "Value": "Sun, Mon, Tue, Wed, Thu, Fri, Sat"
        },
        {
            "Name": "WeekDay",
            "Value": "{{WeekDayList |valueAt={{Query: {{Day}}%7}}}}"
        },
        {
            "Name": "BasicRandomizer", 
            "Value": "{{Random:{{Range: 1, 2}}}}"
        },
        //DIALOGUE SWITCHERS
            /* SenPartnershipRoute - Checks the relationship route for Sen the player is currently on. 
               SenTermSwitcher - Used in i18n calls to change how Sen references the player based on relationship status
               SenKrobusReference - Changes how Sen refers to Krobus based on player met status.
               AnimalBehavior - Changes if pet NPCs "talk" to the player, or do an action. May change how this works later*/
        {
            "Name": "SenPartnershipRoute", 
            "Value": "Romantic",
            "When": { "HasFlag: |contains=DitR_M_SenS_Romantic": true }
        },
        {
            "Name": "SenPartnershipRoute",
            "Value": "Platonic",
            "When": { "HasFlag: |contains=DitR_M_SenS_Romantic": false }
        },
        {
            "Name": "SenTermSwitcher",
            "Value": "Partner",
            "When": { "Relationship:SenS": "Married, Dating, Engaged" }
        },
        {
            "Name": "SenTermSwitcher",
            "Value": "Friend",
            "When": { "Relationship:SenS": "Unmet, Friendly, Divorced" }
        },
        {
            "Name": "SenKrobusReference",
            "Value": "{{i18n:Core.SenS.KrobusUnknown}}",
            "When": { "Relationship:Krobus": "Unmet" }
        },
        {
            "Name": "SenKrobusReference",
            "Value": "{{i18n:Core.SenS.KrobusKnown}}",
            "When": { "Relationship:Krobus": "Married, Dating, Engaged, Friendly, Divorced" }
        },
        {
            "Name": "AnimalBehavior",
            "Value": "{{Random:Sound, Action}}"
        },

        //PASS-IN TOKENS - Used for dialogue sub-randomization and manageable randomization translation 
            /* SenRandTokens - All tokens used for the sub-randomization of Sen's dialogue. (book titles, food, crochet items, etc)
               RelationshipTokens - Storage for tokens that swap terms used based on relationships with or between NPCs
               PlayerPNTokens - Tokens for the player's pronouns, set by the config file. */  
        {
            "Name": "SenRandTokens", //GOD AXELL WHY, GOD WHY GOD WHY WHHHHYYYY
            "Value": "|AP={{i18n:Core.SenS.Book.AP.{{Random:{{Range: 1, 7}}|key=SenSR1}}}} |BookType={{i18n:Core.SenS.Book.Type.{{Random:{{Range: 1, 3}}|key=SenSR2}}}} |Subject={{i18n:Core.SenS.Book.Subj.{{Random:{{Range: 1, 14}}|key=SenSR3}}}} |Subject2={{i18n:Core.SenS.Book.Subj2.{{Random:{{Range: 1, 7}}|key=SenSR}}}} |Descriptor={{i18n:Core.SenS.Book.Obj.{{Random:{{Range: 1, 6}}|key=SenSR5}}}} |Descriptor2={{i18n:Core.SenS.Book.Obj2.{{Random:{{Range: 1, 6}}|key=SenSR6}}}} |Descriptor3={{i18n:Core.SenS.Book.Obj3.{{Random:{{Range: 1, 6}}|key=SenSR7}}}} |Descriptor4={{i18n:Core.SenS.Book.Obj4.{{Random:{{Range: 1, 6}}|key=SenSR8}}}} |Descriptor5={{i18n:Core.SenS.Book.Obj5.{{Random:{{Range: 1, 5}}|key=SenSR9}}}} |BookPeople={{i18n:Core.SenS.Book.People.{{Random:{{Range: 1, 9}}|key=SenSR10}}}} |Author={{i18n:Core.SenS.Book.Author.{{Random:{{Range: 1, 8}}|key=SenSR11}}}} |Author2={{i18n:Core.SenS.Book.Author2.{{Random:{{Range: 1, 5}}|key=SenSR12}}}} |CrocItem={{i18n:Core.SenS.CrocItem.{{Random:{{Range: 1, 7}}|key=SenSR13}}}} |CrocColor={{i18n:Core.SenS.CrocColor.{{Random:{{Range: 1, 5}}|key=SenSR14}}}} |Image={{i18n:Core.SenS.Image.{{Random:{{Range: 1, 9}}|key=SenSR15}}}} |Animal={{i18n:Core.SenS.Animal.{{Random:{{Range: 1, 5}}|key=SenSR16}}}} |Flavor={{i18n:Core.SenS.Flavor.{{Random:{{Range: 1, 5}}|key=SenSR17}}}} |FoodStyle={{i18n:Core.SenS.FoodStyle.{{Random:{{Range: 1, 4}}|key=SenSR18}}}} |Food={{i18n:Core.SenS.Food.{{Random:{{Range: 1, 7}}|key=SenSR19}}}} |Spikes={{i18n:Core.SenS.Spikes.{{Random:{{Range: 1, 4}}|key=SenSR20}}}} |Symbolism={{i18n:Core.SenS.CrocusSymbolism.{{Random:{{Range: 1, 4}}|key=SenSR21}}}} |Object={{i18n:Core.SenS.FoundObjects.{{Random:{{Range: 1, 7}}|key=SenSR22}}}} |Object2={{i18n:Core.SenS.FoundObjects2.{{Random:{{Range: 1, 4}}|key=SenSR23}}}} |People={{i18n:Core.SenS.People.{{Random:{{Range: 1, 12}}|key=SenSR24}}}} |SpringCrop={{i18n:Core.SenS.SpringCrop.{{Random:{{Range: 1, 5}}|key=SenSR25}}}} |Expression={{i18n:Core.SenS.Expression.{{Random:{{Range: 1, 5}}|key=SenSR26}}}} |ClosingEH44={{i18n:Core.SenS.EH.44.{{Random:{{Range: 1, 3}}|key=SenSR27}}}} |ClosingEH46={{i18n:Core.SenS.EH.46.{{Random:{{Range: 1, 3}}|key=SenSR28}}}} |ClosingEH48={{i18n:Core.SenS.EH.48.{{Random:{{Range: 1, 3}}|key=SenSR29}}}} |ClosingEH52={{i18n:Core.SenS.EH.52.{{Random:{{Range: 1, 3}}|key=SenSR30}}}} |ClosingEH53={{i18n:Core.SenS.EH.53.{{Random:{{Range: 1, 4}}|key=SenSR31}}}} |GameResult1={{i18n:Core.SenS.EH.54.1.{{Random:{{Range: 1, 2}}|key=SenSR32}}}} |GameResult2={{i18n:Core.SenS.EH.54.2.{{Random:{{Range: 1, 2}}|key=SenSR33}}}} |QuirkyAction={{i18n:Core.SenS.EH.56.{{Random:{{Range: 1, 4}}|key=SenSR34}}}} |ClosingLH52={{i18n:Core.SenS.LH.52.{{Random:{{Range: 1, 3}}|key=SenSR35}}}} |ClosingSR1={{i18n:Relationship.SenS.RN.1.{{Random:{{Range: 1, 3}}|key=SenSR36}}}} |RainJoke={{i18n:Relationship.SenS.RN.3.{{Random:{{Range: 1, 3}}|key=SenSR37}}}} |IndoorJoke={{i18n:Relationship.SenS.ID.3.{{Random:{{Range: 1, 3}}|key=SenSR38}}}} |SDay19={{i18n:Core.SenS.SDay19.{{Random:{{Range: 1, 3}}|key=SenSR39}}}}"
        },
        {
            "Name": "RelationshipTokens",
            "Value": "|SenRelationshipTerm={{i18n:Core.SenS.RelationshipTerm.{{SenTermSwitcher}}}} |SenKrobusReference={{SenKrobusReference}}"
        },
        {
            "Name": "PlayerPNTokens",
            "Value": "|PPN1={{Random: {{Player Pronouns 1}} |key=PlayerPronouns}} |PPN2={{Random: {{Player Pronouns 2}} |key=PlayerPronouns}} |PPN3={{Random: {{Player Pronouns 3}} |key=PlayerPronouns}} |PPN4={{Random: {{Player Pronouns 4}} |key=PlayerPronouns}} |PPNI={{Random: {{Player Pronoun Identifier}} |key=PlayerPronouns}}"
        },

         //Situational Override Dialogue Generator 
            //Generates conditional dialogue that will randomly override daily dialogue. 
            //Hideous DTs but prevents me from running 500 Randomized Query checks that can overlap.
            //Set up to remove dialogue from the pool if conditions aren't correct.
            //Blank values are unfortunately needed or the entire override DT explodes
            //Must be done per NPC as {{TargetWithoutPath}} will not parse correctly in a DT.

        //--EVE OVERRIDE DIALOGUE GENERATION--

        { "Name": "ETHasED", "Value": "" },  
        { "Name": "ETHasBOES", "Value": "" },
        { "Name": "ETHasTEST", "Value": "" }, 

        {
            "Name": "ETSD",
            "Value": "{{i18n:Core.EveT.Season.{{season}}.{{Random:{{Range: 1, 5}}}}}}"
        },         
        {
            "Name": "ETHasED",
            "Value": "{{i18n:Core.EveT.EDComment.{{Random:{{Range: 1, 3}}}}}}++",
            "When": { "HasMod: |contains=TenebrousNova.EliDylan.CP": true }
        },      
        {
            "Name": "ETHasBOES", 
            "Value": "{{i18n:Core.EveT.BOESComment.{{Random:{{Range: 1, 3}}}}}}++",
            "When": { "HasMod: |contains=KingMadapples.BOES.CP": true }
        },
        {
            "Name": "ETHasTEST",
            "Value": "TEST++",
            "When": { "HasMod: |contains=TEST": true }
        },   
        {
            "Name": "EveOverrideDialogue",
            "Value": "{{Random:{{ETHasED}} {{ETHasBOES}} {{ETHasTEST}} {{ETSD}}|inputSeparator=++}}"
        },

        //--SEN OVERRIDE DIALOGUE GENERATION--

        { "Name": "SSRD",  "Value": "" },
        { "Name": "SSKD", "Value": "" },

        {
            "Name": "SSSD",
            "Value": "{{i18n:Core.SenS.Season.{{season}}.{{Random:{{Range: 1, 10}}}}{{SenRandTokens}}}}"
        },
        {
            "Name": "SSRD",
            "Value": "{{i18n:Core.SenS.RelationshipOverride.{{Random:{{Range: 1, 10}}}}{{RelationshipTokens}}}}++",
            "When": {
                "HasSeenEvent: |contains={{ModID}}.Events.SenS.10h.P3": true,
                "Hearts:SenS": "{{Range: 8, 10}}"
            }
        },    
        {
            "Name": "SSKD",
            "Value": "{{i18n:Core.SenS.KrobusCommentary.{{Random:{{Range: 1, 4}}}}}}++",
            "When": { "Relationship:Krobus": "Married, Dating, Engaged, Friendly, Divorced" }
        },
        {
            "Name": "SenOverrideDialogue",
            "Value": "{{Random:{{SSRD}} {{SSKD}} {{SSSD}}|inputSeparator=++}}"
        }
    ],
    //Files
    "Changes": [
        {
            "Action": "Load",
            "Target": "Characters/Dialogue/EveT, Characters/schedules/EveT, Characters/Dialogue/TraceV, Characters/schedules/TraceV, Characters/Dialogue/WaffleW, Characters/schedules/WaffleW, Characters/Dialogue/PipoP, Characters/schedules/PipoP, Characters/Dialogue/SenS, Characters/schedules/SenS, Characters/Dialogue/MarriageDialogueSenS, Characters/Dialogue/MarriageDialogueSenSRoommate",
            "FromFile": "data/blank.json"
        },
        //All
        {
            "Action": "Include",
            "FromFile": "data/Core/Sprites.json, data/Core/NPCs.json, data/Core/Maps.json, data/Core/Audio.json, data/Core/Items.json, data/Core/Quests.json, data/Core/Fish.json, data/Core/Migration.json, data/Festivals/Festival_Dialogue.json, data/Core/Monsters.json, data/Core/Forage.json, data/Dialogue/Townie.json"
        },
        //Eve
        {
            "Action": "Include",
            "FromFile": "data/Dialogue/Eve.json, data/Schedules/Eve.json, data/Festivals/Eve.json, data/Movies/Eve.json, data/Events/Eve/0h.json, data/Events/Eve/2h.json"
        },
        //Trace
        {
            "Action": "Include",
            "FromFile": "data/Dialogue/Trace.json, data/Schedules/Trace.json"
        },
        //Sen
		{
			"Action": "Include",
			"FromFile": "data/Dialogue/Sen.json, data/Dialogue/Sen_Partner.json, data/Festivals/Sen.json, data/Movies/Sen.json,data/Events/Sen/0h.json, data/Events/Sen/2h.json,data/Events/Sen/4h.json, data/Events/Sen/6h.json,data/Events/Sen/8h.json, data/Events/Sen/10h.json, data/Events/Sen/14h.json, data/Events/Sen/ReactToDeath.json"
		},
        {
			"Action": "Include",
			"FromFile": "data/Schedules/Sen.json",
            "When": { "HasSeenEvent: |contains={{ModID}}.Events.SenS.0h": true }
		},
        //Waffle
        {
            "Action": "Include",
            "FromFile": "data/Dialogue/Waffle.json, data/Schedules/Waffle.json, data/Festivals/Waffle.json, data/Movies/Waffle.json"
        },
        //Pipo
        {
            "Action": "Include",
            "FromFile": "data/Dialogue/Pipo.json, data/Schedules/Pipo.json, data/Festivals/Pipo.json, data/Movies/Pipo.json"
        },
        //Jeremy
        {
            "Action": "Include",
            "FromFile": "data/Dialogue/Jeremy.json, data/Events/Jeremy/QuestActivation.json"
        },
        //loads based on mod compat
        {
            "Action": "EditData",
            "Target": "Mods/Bouhm.NPCMapLocations/NPCs",
            "Entries": {
                "WaffleW": { "MarkerCropOffset": 15 },
                "PipoP":   { "MarkerCropOffset": 15 },
                "EveT":    { "MarkerCropOffset": 4 },
                "TraceV":  { "MarkerCropOffset": 4 },
                "SenS":    { "MarkerCropOffset": 5 }
            },
            "When": { "HasMod: |contains=Bouhm.NPCMapLocations": true }
        }
    ]
}